// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using SuperTraders.Model;

namespace SuperTraders.Model.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20210715225648_initial")]
    partial class initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.8")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("SuperTraders.Model.Share", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Created_by")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Deleted_by")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Deleted_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Modified_by")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Modified_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasPrecision(2)
                        .HasColumnType("numeric(2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<string>("Symbol")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("character varying(3)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Shares");
                });

            modelBuilder.Entity("SuperTraders.Model.TradingTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Created_by")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Deleted_by")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Deleted_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Modified_by")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Modified_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasPrecision(2)
                        .HasColumnType("numeric(2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int>("Result")
                        .HasColumnType("integer");

                    b.Property<string>("ResultMessage")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("character varying(255)");

                    b.Property<int?>("ShareId")
                        .HasColumnType("integer");

                    b.Property<int>("Share_id")
                        .HasColumnType("integer");

                    b.Property<int>("TransactionType")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("User_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ShareId");

                    b.HasIndex("UserId");

                    b.ToTable("TradingTransactions");
                });

            modelBuilder.Entity("SuperTraders.Model.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Created_by")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Deleted_by")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Deleted_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Modified_by")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Modified_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SuperTraders.Model.UserShare", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int>("Created_by")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Created_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Deleted_by")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Deleted_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("Modified_by")
                        .HasColumnType("integer");

                    b.Property<DateTime>("Modified_on")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("Price")
                        .HasPrecision(2)
                        .HasColumnType("numeric(2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("integer");

                    b.Property<int?>("ShareId")
                        .HasColumnType("integer");

                    b.Property<int>("Share_id")
                        .HasColumnType("integer");

                    b.Property<int?>("UserId")
                        .HasColumnType("integer");

                    b.Property<int>("User_id")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.HasIndex("ShareId");

                    b.HasIndex("UserId");

                    b.ToTable("UserShares");
                });

            modelBuilder.Entity("SuperTraders.Model.TradingTransaction", b =>
                {
                    b.HasOne("SuperTraders.Model.Share", "Share")
                        .WithMany("TradingTransactions")
                        .HasForeignKey("ShareId");

                    b.HasOne("SuperTraders.Model.User", "User")
                        .WithMany("TradingTransactions")
                        .HasForeignKey("UserId");

                    b.Navigation("Share");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SuperTraders.Model.UserShare", b =>
                {
                    b.HasOne("SuperTraders.Model.Share", "Share")
                        .WithMany("UserShares")
                        .HasForeignKey("ShareId");

                    b.HasOne("SuperTraders.Model.User", "User")
                        .WithMany("UserShares")
                        .HasForeignKey("UserId");

                    b.Navigation("Share");

                    b.Navigation("User");
                });

            modelBuilder.Entity("SuperTraders.Model.Share", b =>
                {
                    b.Navigation("TradingTransactions");

                    b.Navigation("UserShares");
                });

            modelBuilder.Entity("SuperTraders.Model.User", b =>
                {
                    b.Navigation("TradingTransactions");

                    b.Navigation("UserShares");
                });
#pragma warning restore 612, 618
        }
    }
}
